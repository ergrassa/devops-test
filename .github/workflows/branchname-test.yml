# This is a basic workflow to help you get started with Actions

name: Get branch name and test

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:
  branchname:
    runs-on: ubuntu-latest
    outputs:
      feature: ${{ steps.extract_branch.outputs.feature }}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
    - 
      name: Extract branch name
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo ${GITHUB_REF#refs/heads/}
        echo "##[set-output name=feature;]$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/')"
        echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/'
      id: extract_branch
      
  echo:
    needs: branchname
    runs-on: ubuntu-latest
    env:
      # переменные
      T_FEATURE: _feature_ # строка поиска в шаблоне для замены на feature-name
      T_BRANCH: _branch_ # строка поиска в шаблоне для замены на feature/name
      T_VHOST_FRONTEND: _fronthost_ # строка поиска в шаблоне для замены на $VHOST_FRONTEND
      T_VHOST_BACKEND: _backhost_ # # строка поиска в шаблоне для замены на $VHOST_BACKEND
      T_NETNAME: _netname_ # строка поиска в шаблоне для замены на $NETNAME
      T_PROXYNAME: _proxy_ # строка поиска в шаблоне для замены на $PROXYNAME
      TEMPLATE: lms.review-template.yml # файл шаблона
      FILE: lms.review.yml # компоуз-файл фичи
      NETNAME: lms-${{ needs.branchname.outputs.feature }} # имя сети с feature-name
      PROXYNAME: nginx-proxy-ngp-1 # имя контейнера с прокси
      VHOST_FRONTEND: frontend.foo.local
      VHOST_BACKEND: backend.foo.local
      # 
      FEATURE: ${{ needs.branchname.outputs.feature }} # feature-name
      BRANCH: ${{ needs.branchname.outputs.branch }} # feature/name
    steps:
    -
      name: echo
      shell: bash
      run: |
        echo ${{ env.T_FEATURE }}
        echo ${{ env.T_BRANCH }}
        echo ${{ env.T_VHOST_FRONTEND }}
        echo ${{ env.T_VHOST_BACKEND }}
        echo ${{ env.T_NETNAME }}
        echo ${{ env.T_PROXYNAME }}
        echo ${{ env.TEMPLATE }}
        echo ${{ env.FILE }}
        echo ${{ env.NETNAME }}
        echo ${{ env.PROXYNAME }}
        echo ${{ env.VHOST_FRONTEND }}
        echo ${{ env.VHOST_BACKEND }}
        echo ${{ env.FEATURE }}
        echo ${{ env.BRANCH }}

        cat << EOF
          mkdir -p ~/deploy/${{ env.FEATURE }}
          cd ~/deploy/${{ env.FEATURE }}
          cp ~/${{ env.TEMPLATE }} ./${{ env.FILE }}
          sed -i 's/${{ env.T_FEATURE }}/${{ env.FEATURE }}/' ./${{ env.FILE }}
          sed -i 's/${{ env.T_BRANCH }}/${{ env.BRANCH }}/' ./${{ env.FILE }}
          sed -i 's/${{ env.T_VHOST_FRONTEND }}/${{ env.VHOST_FRONTEND }}/' ./${{ env.FILE }}
          sed -i 's/${{ env.T_VHOST_BACKEND }}/${{ env.VHOST_BACKEND }}/' ./${{ env.FILE }}
          sed -i 's/${{ env.T_NETNAME }}/${{ env.NETNAME }}/' ./${{ env.FILE }}
          sed -i 's/${{ env.T_PROXYNAME }}/${{ env.PROXYNAME }}/' ./${{ env.FILE }} 
        EOF

        mkdir -p ~/deploy/${{ env.FEATURE }}
        cd ~/deploy/${{ env.FEATURE }}
        cp ~/${{ env.TEMPLATE }} ./${{ env.FILE }}
        sed -i 's/${{ env.T_FEATURE }}/${{ env.FEATURE }}/' ./${{ env.FILE }}
        sed -i 's/${{ env.T_BRANCH }}/${{ env.BRANCH }}/' ./${{ env.FILE }}
        sed -i 's/${{ env.T_VHOST_FRONTEND }}/${{ env.VHOST_FRONTEND }}/' ./${{ env.FILE }}
        sed -i 's/${{ env.T_VHOST_BACKEND }}/${{ env.VHOST_BACKEND }}/' ./${{ env.FILE }}
        sed -i 's/${{ env.T_NETNAME }}/${{ env.NETNAME }}/' ./${{ env.FILE }}
        sed -i 's/${{ env.T_PROXYNAME }}/${{ env.PROXYNAME }}/' ./${{ env.FILE }} 